# Process this file with autoconf to produce a configure script.
AC_INIT
AC_PREREQ(2.50)
AC_REVISION($Revision: 1.5 $)

AM_INIT_AUTOMAKE(glsnake, 0.8.2, jaq@spacepants.org)
AC_CONFIG_SRCDIR(glsnake.c)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

# Checks for programs.
AC_PROG_CC

# Checks for libraries.

dnl --------------
dnl check for GLUT
dnl --------------
HAVE_GLUT=no

AC_ARG_WITH(glut,
	AC_HELP_STRING([--with-glut(=DIR)],
		[use GLUT (optionally, found in DIR)]),
	dnl argument was given, check for --without
	if test "x${with_glut}" != xno ; then
		ac_with_glut=yes
	else
		ac_with_glut=no
	fi,
	ac_with_glut=auto
)

if test "x${ac_with_glut}" != xno ; then
	# --with-glut was explicitly given, so look in that dir
	if test "x${ac_with_glut}" != xauto ; then
		GLUT_CFLAGS="$GLUT_CFLAGS -I$withval/include"
		GLUT_LIBS="$GLUT_LIBS -L$withval/lib"
	fi

	# set CPPFLAGS for the coming tests
	save_CPPFLAGS="$CPPFLAGS"
	CPPFLAGS="$CPPFLAGS $GLUT_CFLAGS"
	
	# test for the library first, for people who may have the libs
	# but no headers (forgot to install dev package)
	AC_CHECK_LIB(glut, glutMainLoop,
		HAVE_GLUT=maybe,
		# failed, so use -lGLU as well
		unset ac_cv_lib_glut_glutMainLoop
		GLUT_LIBS="$GLUT_LIBS -lGLU"
		AC_CHECK_LIB(glut, glutMainLoop,
			HAVE_GLUT=maybe,
			HAVE_GLUT=no,
			[ $GLUT_LIBS ]
		),
		[ $GLUT_LIBS ]
	)

	# check for the header
	if test "x${HAVE_GLUT}" = xmaybe ; then
		AC_CHECK_HEADER(GL/glut.h,
			HAVE_GLUT=yes,
			HAVE_GLUT=no
		)
	fi

	# if it's all there, define the relevent parts
	if test "x${HAVE_GLUT}" = xyes ; then
		AC_DEFINE(HAVE_GLUT, 1, [Define this if you have GLUT])
		GLUT_LIBS="$GLUT_LIBS -lglut"
		AC_SUBST(GLUT_LIBS)
		AC_SUBST(GLUT_CFLAGS)
	else
		# we were explicitly told to use glut and it's not there
		if test "x${ac_with_glut}" = xyes ; then
			AC_MSG_WARN([
*** You have explicitly asked for GLUT support, but the required libraries
*** and development files could not be found.
*** GLUT interface will NOT be built.])
		fi
	fi

	# restore CPPFLAGS
	CPPFLAGS="$save_CPPFLAGS"
else
	HAVE_GLUT=disabled
fi

# check for OpenGL if not/can't build with GLUT
HAVE_OPENGL="no"
if test "x$HAVE_GLUT" != "xyes" ; then
	# set CPPFLAGS for coming tests
	save_CPPFLAGS="$CPPFLAGS"
	CPPFLAGS="$CPPFLAGS $OPENGL_CPPFLAGS"

	# test for installed library first, for people who may have
	# the library but not the headers
	AC_CHECK_LIB(GL, glBegin,
		OPENGL_LIBS="$OPENGL_LIBS -lGL"
		HAVE_OPENGL="maybe",
		dnl add -lX11 and -lXext if the first test fails
		dnl (for, e.g., FreeBSD)
		unset ac_cv_lib_GL_glBegin
		AC_CHECK_LIB(GL, glBegin,
			OPENGL_LIBS="$OPENGL_LIBS -lX11 -lXext"
			HAVE_OPENGL="maybe",
			HAVE_OPENGL="no",
			[$OPENGL_LIBS -lX11 -lXext]
		),
		[$OPENGL_LIBS]
	)

	# test for GLU
	AC_CHECK_LIB(GLU, gluPerspective,
		OPENGL_LIBS="$OPENGL_LIBS -lGLU"
		HAVE_OPENGL="maybe",
		unset ac_cv_lib_GL_glBegin
		AC_CHECK_LIB(GL, glBegin,
			OPENGL_LIBS="$OPENGL_LIBS -lX11 -lXext"
			HAVE_OPENGL="maybe",
			HAVE_OPENGL="no",
			[$OPENGL_LIBS -lX11 -lXext]
		),
		[$OPENGL_LIBS]
	)

	# test for the header now
	if test "x$HAVE_OPENGL" = "xmaybe" ; then
		AC_CHECK_HEADER(GL/gl.h,
			HAVE_OPENGL="maybe",
			HAVE_OPENGL="no"
		)
	fi
	if test "x$HAVE_OPENGL" = "xmaybe" ; then
		AC_CHECK_HEADER(GL/glu.h,
			HAVE_OPENGL="yes",
			HAVE_OPENGL="no"
		)
	fi

	if test "x$HAVE_OPENGL" = "xyes" ; then
		AC_DEFINE(HAVE_OPENGL, 1, [Define this if you have OpenGL])
		AC_SUBST(OPENGL_CFLAGS)
		AC_SUBST(OPENGL_LIBS)
	fi

	# restore CPPFLAGS
	CPPFLAGS="$save_CPPFLAGS"
fi

# check for xscreensaver source if not building with GLUT
HAVE_XSCREENSAVER=no
AC_ARG_WITH(xscreensaver,
	AC_HELP_STRING([--with-xscreensaver=DIR],
		[use xscreensaver source found in DIR]),
	dnl argument was given, check for --without
	if test "x${with_xscreensaver}" != "xno" ; then
		ac_with_xscreensaver=yes
	else
		ac_with_xscreensaver=no
	fi,
	ac_with_xscreensaver=no
)
if test "x$HAVE_GLUT" != "xyes" ; then
	if test "x${ac_with_xscreensaver}" != "xno" ; then
		if test "x$withval" = "xyes" ; then
				AC_MSG_ERROR([
*** You have explicitly asked for xscreensaver support but no source
*** directory was given.  You need to specify the directory containing
*** the xscreensaver source in order to build glsnake as an xscreensaver
*** hack.])
		else
			# --with-xscreensaver was explicitly given, so check
			# for source in that dir
			XSCREENSAVER_CFLAGS="$XSCREENSAVER_CFLAGS -I$withval/hacks -I$withval/utils"
		fi
	fi
fi
AC_SUBST(XSCREENSAVER_CFLAGS)

AC_CHECK_LIB(m, sqrt)

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([stddef.h stdlib.h string.h sys/timeb.h])

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.
AC_FUNC_MALLOC
AC_CHECK_FUNCS([atexit ftime memset sqrt strdup])

dnl check whether gettimeofday() exists, and how many arguments it has
AC_MSG_CHECKING([how to call gettimeofday])
AC_CACHE_VAL(ac_cv_gettimeofday_args,
	[AC_TRY_COMPILE([#include <stdlib.h>
			#include <sys/time.h>],
			[struct timeval tv; struct timezone tzp;
			 gettimeofday(&tv,&tzp);],
			[ac_gettimeofday_args=2],
			[AC_TRY_COMPILE([#include <stdlib.h>
					 #include <sys/time.h>],
					[struct timeval tv; gettimeofday(&tv);],
					[ac_gettimeofday_args=1],
					[ac_gettimeofday_args=0])])
	ac_cv_gettimeofday_args=$ac_gettimeofday_args])
ac_gettimeofday_args=$ac_cv_gettimeofday_args
if test "$ac_gettimeofday_args" = 1 ; then
	AC_DEFINE(HAVE_GETTIMEOFDAY, 1, [Define this if your system has the gettimeofday function])
	AC_MSG_RESULT(one argument)
elif test "$ac_gettimeofday_args" = 2 ; then
	AC_DEFINE(HAVE_GETTIMEOFDAY, 1, [Define this if your system has the gettimeofday function])
	AC_DEFINE(GETTIMEOFDAY_TWO_ARGS, 1, [Define this if your system's gettimeofday takes two arguments])
	AC_MSG_RESULT(two arguments)
else
	AC_MSG_RESULT(unknown)
fi

dnl spit it out
AC_CONFIG_FILES([
	Makefile
	tools/Makefile
	data/Makefile
	pixmaps/Makefile
])
AC_OUTPUT

AC_MSG_RESULT([
glsnake $VERSION: automatic configuration OK!

Configuration summary:

  Program: ............. ${prefix}/bin/glsnake

Type 'make' to compile glsnake.
])
